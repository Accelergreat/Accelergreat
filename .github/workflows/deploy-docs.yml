name: Deploy Documentation to Azure Static Web Apps

on:
  push:
    branches: [ main ]
    paths:
      - 'docs/**'
      - 'docfx.json'
      - 'index.md'
      - 'components.md'
      - 'microservices.md'
      - 'src/**/*.cs'
      - 'src/**/*.csproj'
  pull_request:
    branches: [ main ]
    paths:
      - 'docs/**'
      - 'docfx.json'
      - 'index.md'
      - 'components.md'
      - 'microservices.md'
      - 'src/**/*.cs'
      - 'src/**/*.csproj'

permissions:
  contents: read
  pull-requests: write

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_NOLOGO: true
  BUILD_CONFIGURATION: Release

jobs:
  build_and_deploy:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Documentation
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: true
        fetch-depth: 0

    - name: Setup .NET SDKs
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          6.0.x
          7.0.x
          8.0.x
          9.0.x

    - name: Generate version from semantic versioning
      id: version
      run: |
        # Read base version from version.json
        BASE_VERSION=$(jq -r '.version' version.json)
        
        if [ "${{ github.ref }}" == "refs/heads/main" ]; then
          # For main branch, use the base version
          VERSION="${BASE_VERSION}"
        else
          # For PR/branches, add pre-release suffix
          SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
          VERSION="${BASE_VERSION}-alpha.${SHORT_SHA}"
        fi
        
        echo "version=${VERSION}" >> $GITHUB_OUTPUT
        
        # Create version replacement for token replacement
        sed -i "s/~(version)~/${VERSION}/g" src/Directory.Build.props

    - name: Restore dependencies
      run: dotnet restore Accelergreat.sln

    - name: Build solution
      run: dotnet build Accelergreat.sln --configuration ${{ env.BUILD_CONFIGURATION }} --no-restore

    - name: Install DocFX
      run: dotnet tool install -g docfx

    - name: Build documentation
      run: docfx docfx.json

    - name: Deploy to Azure Static Web Apps
      uses: Azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        action: "upload"
        app_location: "_site"
        output_location: ""
        skip_app_build: true

  close_pull_request:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request
    
    steps:
    - name: Close Pull Request
      uses: Azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
        action: "close"